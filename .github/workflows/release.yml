name: Release

on:
  push:
    tags:
      - 'release/v*.*.*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output: codecollector-linux-amd64
          - goos: windows
            goarch: amd64
            output: codecollector-windows-amd64.exe
          - goos: darwin
            goarch: amd64
            output: codecollector-darwin-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/release/v}" >> $GITHUB_OUTPUT

      - name: Build project
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -o ${{ matrix.output }} -ldflags="-X 'main.version=${{ steps.get_version.outputs.VERSION }}'" .

      - name: Run tests
        run: go test -v ./...

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output }}
          path: ./${{ matrix.output }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/release/v}" >> $GITHUB_OUTPUT

      - name: Get release notes
        id: release_notes
        run: |
          if [ -f RELEASE_NOTES.md ]; then
            NOTES=$(cat RELEASE_NOTES.md)
          else
            NOTES="Release of version ${{ steps.get_version.outputs.VERSION }}"
          fi
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.release_notes.outputs.NOTES }}
            
            For full details, see the [CHANGELOG](https://github.com/Anomalybound/codecollector/blob/main/CHANGELOG.md)
          draft: false
          prerelease: false

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in codecollector-*; do
            gh release upload v${{ steps.get_version.outputs.VERSION }} "$file"
          done